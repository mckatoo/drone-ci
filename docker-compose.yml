version: "3.7"

networks:
  global:
    driver: overlay

services:
  drone-server:
    image: drone/drone:1
    ports:
      - 8080:80
      - 8443:443
    networks:
      - global
    volumes:
      - drone-data:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 180s
    environment:
      - DRONE_AGENTS_ENABLED=${DRONE_AGENTS_ENABLED}
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}

  drone-runner:
    image: drone/drone-runner-docker:1
    ports:
      - 3000:3000
    networks:
      - global
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 180s
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=${DRONE_RPC_PROTO}
      - DRONE_RPC_HOST=${DRONE_RPC_HOST}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
      - DRONE_RUNNER_NAME=${HOSTNAME_RUNNER}

volumes:
  drone-data:
